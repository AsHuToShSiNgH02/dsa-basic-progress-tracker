export const dsaData = [
  {
    name: "Basic Fundamentals of Language (C/C++/Java)",
    questions: [
      "Hello World Program (Main class)",
      "Variables",
      "Data Types",
      "Input Output Format",
      "Operators",
      "Unary Operator (Prefix, Postfix)",
      "Arithmetic Operator",
      "Shift Operator",
      "Relational Operator",
      "Bitwise Operator",
      "Logical Operator",
      "Ternary Operator",
      "Assignment Operator",
      "Precedence, Order of Evaluation, and Associativity",
      "Control Statements",
      "If-else",
      "Switch",
      "For Loop",
      "While Loop",
      "Do While Loop",
      "Break",
      "Continue",
      "Functions",
      "Struct / Class",
      "Flow Chart",
      "Pseudo Code / Algorithms",
      "Problem Solving / Steps of Solving Problems",
      "Define Problem",
      "Analyse Problem",
      "Generate all possible solutions",
      "Analyse solutions",
      "Select the best optimal solution",
      "Implement Solution",
      "Algorithm Complexity",
      "Time Complexity",
      "Space Complexity"
    ]
  },
  {
    name: "Assignment 1",
    questions: [
      "WAP to take input 2 numbers from the user and print the sum of the numbers.",
      "WAP to take input 1 number from the user and print its square and cube.",
      "WAP to calculate and print area of circle and circumference of circle.",
      "WAP to take input rupees from the user and convert it into paise.",
      "WAP to take input days from the user and convert it into years, months, and remaining days.",
      "WAP to take input 3 digit numbers from the user and print sum of 1 and 3 digit.",
      "WAP to take input 3 digit numbers from the user and print the square of the middle digit.",
      "WAP to take input 4 digit numbers from the user and print its all digits.",
      "WAP to check whether a number is even or odd.",
      "WAP to check whether the number is positive, negative or zero.",
      "WAP to take input two numbers from the user and print the largest of them.",
      "WAP to take input 2 numbers from the user and print their difference.",
      "WAP to take input 3 numbers from the user and print the largest number among them using nested if.",
      "WAP to take input 3 numbers from the user and print the largest number among them using AND operator.",
      "WAP to take input rate & quantity and calculate the amount. Finally print net amount to be paid after allowing 15% discount if amount exceeds 2000 rs.",
      "WAP to take input 3 numbers and print the 2nd largest number among them.",
      "WAP to take input a number (range 1 to 7) from the user and print the corresponding week using if else.",
      "WAP to take input a number (range 1 to 7) from the user and print the corresponding week using switch.",
      "WAP to input year from user and check whether it is a leap year or not.",
      "WAP to take input 3 numbers from the user and print the numbers in the descending order.",
      "WAP to take input income from the user and calculate the amount of tax to be paid as per rules.",
      "WAP to perform arithmetic operations as per user's choice.",
      "WAP to calculate the area of rectangle, circle and triangle as per user's choice.",
      "WAP to input a character from user and check whether it is an alphabets, digits, or special symbols.",
      "WAP to input a character from user and check whether it is uppercase and lowercase.",
      "WAP to check whether a character given by user is a vowel or consonant.",
      "WAP to convert a character into its toggle case.",
      "WAP to input a lower limit and an upper limit from user and print all the numbers in between the given limits.",
      "WAP to input a lower limit and an upper limit from user and print all the even numbers in between the given limits.",
      "WAP to input a number from user and print its factorial.",
      "WAP to input a number from user and print its table.",
      "WAP to print the sum of the divisors of a number given by user.",
      "WAP to check whether a number is perfect or not.",
      "WAP to print the reverse of a number given by user.",
      "WAP to take input a number from the user and check whether it is palindrome.",
      "WAP to take input a number from the user and check whether it is armstrong.",
      "WAP to take input a number from user and print in the form of series.",
      "WAP to calculate the average of even and odd numbers given by user until user press -1.",
      "Define a class called MovieMagic with the following description.",
      "Define a class called ParkingLot with the following description.",
      "WAP to input a string from the user and count the number of alphabets, digits & special symbols in the string.",
      "WAP to convert a string into PIGLATIN form."
    ]
  }
  // {
  //   name: "Set & Map",
  //   questions: [
  //     "Intersection of Two Arrays",
  //     "Design HashSet",
  //     "Design HashMap",
  //     "Majority Element",
  //     "Intersection of Two Arrays II",
  //     "Two Sum",
  //     "Contains Duplicate II",
  //     "Custom Sort String",
  //     "Group Anagrams",
  //     "4Sum II",
  //     "Set Matrix Zeroes",
  //     "Insert Delete GetRandom O(1)",
  //     "Rabbits in Forest",
  //     "Majority Element II",
  //     "Vowel Spellchecker",
  //     "Contiguous Array",
  //     "Subarray Sum Equals K",
  //     "Subarray Sums Divisible by K",
  //     "Continuous Subarray Sum",
  //     "Make Sum Divisible by P",
  //     "Fraction to Recurring Decimal",
  //     "First Missing Positive",
  //     "Count K-Subsequences of a String With Maximum Beauty"
  //   ]
  // },
  // {
  //   name: "Sorting",
  //   questions: [
  //     "Maximum Units on a Truck",
  //     "Merge Sorted Array",
  //     "Two City Scheduling",
  //     "Sort Colors",
  //     "Minimum Increment to Make Array Unique",
  //     "Boats to Save People",
  //     "Bag of Tokens",
  //     "Merge Intervals",
  //     "3Sum Closest",
  //     "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts",
  //     "H-Index",
  //     "Maximum Sum Obtained of Any Permutation",
  //     "3Sum",
  //     "4Sum",
  //     "Smallest Range II"
  //   ]
  // },
  // {
  //   name: "Two Pointer",
  //   questions: [
  //     "Move Zeroes",
  //     "Remove Duplicates from Sort",
  //     "Interval List Intersections",
  //     "Container With Most Water",
  //     "Rotate Array",
  //     "Next Permutation",
  //     "Trapping Rain Water"
  //   ]
  // },
  // {
  //   name: "Prefix & Suffix",
  //   questions: [
  //     "Range Sum Query - Immutable",
  //     "Matrix Block Sum",
  //     "Sum of Absolute Differences in a Sorted Array",
  //     "Product of Array Except for Self"
  //   ]
  // },
  // {
  //   name: "Dynamic Programming",
  //   questions: [
  //     "Fibonacci Number",
  //     "Climbing Stairs",
  //     "Min Cost Climbing Stairs",
  //     "N-th Tribonacci Number",
  //     "Best Time to Buy and Sell Stock",
  //     "Best Time to Buy and Sell Stock II",
  //     "Is Subsequence",
  //     "House Robber",
  //     "House Robber II",
  //     "Count Sorted Vowel Strings",
  //     "Unique Paths",
  //     "Longest Common Subsequence",
  //     "Count Square Submatrices with All Ones",
  //     "Coin Change",
  //     "Coin Change II",
  //     "Uncrossed Lines",
  //     "Number of Dice Rolls With Target Sum",
  //     "Arithmetic Slices",
  //     "Minimum ASCII Delete Sum for Two Strings",
  //     "Minimum Cost For Tickets",
  //     "Best Sightseeing Pair",
  //     "Minimum Falling Path Sum",
  //     "Longest Increasing Subsequence",
  //     "Best Time to Buy and Sell Stock III",
  //     "Edit Distance",
  //     "Maximum Product Subarray",
  //     "Maximum Length of Repeated Subarray",
  //     "Decode Ways",
  //     "Count Number of Teams"
  //   ]
  // },
  // {
  //   name: "Graph",
  //   questions: [
  //     "Find Center of Star Graph",
  //     "Find the Town Judge",
  //     "Minimum Number of Vertices to Reach All Nodes",
  //     "Keys and Rooms",
  //     "All Paths From Source to Target",
  //     "Number of Islands",
  //     "Max Area of Island",
  //     "Number of Provinces",
  //     "Find if Path Exists in Graph",
  //     "Course Schedule",
  //     "Course Schedule II",
  //     "Maximum Total Importance of Roads",
  //     "Redundant Connection",
  //     "Clone Graph",
  //     "Is Graph Bipartite?",
  //     "Possible Bipartition",
  //     "Count Servers that Communicate"
  //   ]
  // },
  // {
  //   name: "Tree",
  //   questions: [
  //     "Search in a Binary Search Tree",
  //     "Binary Tree Postorder Traversal",
  //     "Binary Tree Preorder Traversal",
  //     "Binary Tree Inorder Traversal",
  //     "Binary Tree Level Order Traversal",
  //     "Binary Tree Zigzag Level Order Traversal",
  //     "N-ary Tree Postorder Traversal",
  //     "N-ary Tree Preorder Traversal",
  //     "Maximum Depth of Binary Tree",
  //     "Average of Levels in Binary Tree",
  //     "Count Complete Tree Nodes",
  //     "Diameter of Binary Tree"
  //   ]
  // }
];

